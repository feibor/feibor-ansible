# master node(s), set unique 'k8s_nodename' for each node
# CAUTION: 'k8s_nodename' must consist of lower case alphanumeric characters, '-' or '.',
# and must start and end with an alphanumeric character
[cluster_master]
# 192.168.1.1 k8s_nodename='master-01'

# work node(s), set unique 'k8s_nodename' for each node
# CAUTION: 'k8s_nodename' must consist of lower case alphanumeric characters, '-' or '.',
# and must start and end with an alphanumeric character
[cluster_node]
# 192.168.1.4 k8s_nodename='worker-01'


[redis_standalone]
redis-standalone ansible_host=192.168.10.51 server_name='redis-standalone' host_redis_port='6379'

[redis_master]
redis-master01 ansible_host=192.168.10.51 server_name='redis-master01' host_redis_port='6379'

[redis_slave]
redis-slave01 ansible_host=192.168.10.51 server_name='redis-slave01'  host_redis_port='16379'
redis-slave02 ansible_host=192.168.10.51 server_name='redis-slave02'  host_redis_port='16479'

[redis_sentinel]
redis-sentinel01 ansible_host=192.168.10.51 server_name='redis-sentinel01' host_redis_port='26379'
redis-sentinel02 ansible_host=192.168.10.51 server_name='redis-sentinel02' host_redis_port='26380'
redis-sentinel03 ansible_host=192.168.10.51 server_name='redis-sentinel03' host_redis_port='26381'

[redis_standalone:vars]
backup=true
logfile="redis-{{host_redis_port}}.log"
cluster_announce_ip="{{ansible_host}}"
cluster_announce_port="{{host_redis_port}}"

[redis_master:vars]
backup=true
logfile="redis-{{host_redis_port}}.log"
cluster_announce_ip="{{ansible_host}}"
cluster_announce_port="{{host_redis_port}}"

[redis_slave:vars]
redis_master_ip="192.168.10.51"
redis_master_port="6379"
backup=true
logfile="redis-{{host_redis_port}}.log"
cluster_announce_ip="{{ansible_host}}"
cluster_announce_port="{{host_redis_port}}"

# slave-serve-stale-data: This configuration item controls the behavior of the slave server 
# when it loses connection with the master server. If set to yes (the default value), 
# the slave will continue to serve client requests even after losing connection to the master, 
# although the data may not be the latest. 
# If set to no, the slave will not respond to client query requests when disconnected from the master 
# until it reconnects to the master and completes the data synchronization.

# yes or no
slave_serve_stale_data=no
slave_read_only=yes

[redis_sentinel:vars]
backup=true
logfile="redis-{{host_redis_port}}.log"
sentinel_announce_ip={{ansible_host}}
sentinel_announce_port={{host_redis_port}}

# redis master cluster name
master_cluster_name=mymaster


# at_least_agree_num: Can be specified at number of 2 or more.
# If the value of at_least_agree_num is the number of 2, it means that at least 2 Sentinels must agree that the
# master is untriggered to trigger a failover.
at_least_agree_num=2

[all:vars]
# Deploy Directory (kubeasz workspace)
base_dir="/etc/feiboransi"

# Directory for a specific cluster
cluster_dir="{{ base_dir }}/clusters/_cluster_name_"

# The directory where all materials have been published. Changing it is necessary to adapt your configuration. 
base_99material_dir="/data/99.Deployment_Materials"
middleware_dir="/data/clusters/_cluster_name_"

# Redis Configuration
# standalone, master-slave, master-slave-sentinel.
# When useing standalone mode, it will only deploy redis server to [redis_standlone].
#"{{ base_dir }}/99.Deployment_Materials/2.middleware/1.redis" 
# redis_base_dir - the development materials path in feiboransi container. 
redis_base_dir="{{base_dir}}/materials/redis"
redis_image_dir="{{base_99material_dir}}/2.middleware/1.redis/0.images/"
redis_image_file_name="redis.6.2.13.tar.gz"
redis_dest_dir='/data/redis/{{server_name}}'
redis_images_dir=''
redis_data_mount='{{redis_dest_dir}}/redis-data' 
redis_conf_mount='{{redis_dest_dir}}/config'
redis_bind_ip="0.0.0.0"
redis_masterauth="1q2w3e4r#$"
redis_requirepass="1q2w3e4r#$"
redis_image_tag="redis:6.2.13"

redis_master_ip="192.168.10.51"
redis_master_port="6379"

#redis_version="6.2.13"
# Default python interpreter
# ansible_python_interpreter=/usr/bin/python3
